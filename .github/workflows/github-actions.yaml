name: Docker Push and Test 

on:
  push:
    branches: [ "main" ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

# Estágio de teste - Como o backend espera o banco de dados saudável pra rodar, precisamos buildar todos juntos e subir para fazer os testes
# Além disso, temos que parar todos os conteineres depois do teste. Para isso usamos o if: always() para garantir que mesmo que haja
# erro nas etapas anteriores, os conteineres sejam parados.

      - name: Build images using Docker Compose
        run: docker compose build

      - name: Start services for testing
        run: docker compose up -d db backend frontend loader

      - name: Wait for services to be ready and Test Backend
        run: |
          echo "Vamos esperar 20 segundos para garantir que a aplicação está executando"
          sleep 20
          curl -f http://localhost:8080/movies || (echo "Backend falhou ao responder" && exit 1)

      - name: Test Frontend container
        run: |
          echo "Testando o frontend"
          curl -f http://localhost:80 || (echo "Frontend falhou ao responder" && exit 1)

      - name: Run and Test Loader Service (Simpler Exit Code Check)
        run: |
          echo "Rodando o loader"
          docker compose up --abort-on-container-exit loader
          echo "Loader finalizou sem problemas"
          
      - name: Stop services after test (Cleanup)
        if: always() 
        run: docker compose down -v

# Estágio de Push - Agora que os testes foram feitos com sucesso, podemos fazer o push das nossas aplicações pro dockerhub
      # Backend
      - name: Build and Tag backend image for push
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-project:latest ./movieflix-project

      - name: Push backend image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-project:latest

      # Frontend
      - name: Build and Tag frontend image for push
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-frontend:latest ./movieflix-frontend

      - name: Push frontend image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-frontend:latest

      # Data Loader
      - name: Build loader image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-data:latest ./movieflix-data

      - name: Push loader image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-data:latest